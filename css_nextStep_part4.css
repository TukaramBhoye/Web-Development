/* CSS- NEXT LEVEL PART 4: */

/* 
*1: Alpha Channel : 
    - Sets the opacity for a color 
    - Ranges from 0 to 1 -->(hidden) 
    - opacity: a0.0, 0.1, 0.2, 0.3, 0.4---->1.0

    red, green, blue, alpha(opacity) 
   - rgba(255, 255, 255, 0.3)

   #4dff00a1; 
   00 : completely hidden 
   ff : completely visible 

*2: Opacity : 
      - Sets the opacity for the element 
        Ranges from 0 to 1

*3: CSS Transitions : Transitions enable you to define th transition between 
                       two states of an element. 
 
                       transition : 1s ; 
                same---> transition-duration : 1s ;

*i: Transition ShortHand: Property name|duration|timiming | delay 
              transition: margin-top   2s  ease-in-out  0.2s;               
                          margin-top   2s  ease  0.2s;               
        
      *MDN Timing funtion transition 

*ii: CSS Transform :
        - This property lets you rotate, scale, skew, or translate an element. 
        
        (i)Rotate:  
                - transform : rotate(45deg);
                
        (ii)Scale  : 
                transform : scale(0.5) 
                transform : scale(1.5)

        (iii)Translate : along the 2D plane : 
                transform: translate(50px, 50px); 
                transform: translateX(10px): 
                transform: translateY(10px); 
        (iv) skew: 
               transform:skew(30deg); 
               transform:skew(-30deg);
               transform: rotate(30deg) translateX(150px)

*iii: box Shadow: 
       - It adds shadow effects around an elements's frame. 
       - box-shadow : 2px 2px 10px green; 
                         2px      2px       10px         green
         draw offsets: x(dist)-->y(dist)--->blurRadius-->shadowColor;

*iv: Background Image: Lets you an image as a background. 
        background-image: url(add url); 

        background-size-contain/cover/auto; 
            contain: crop x = repeat image until all place fill 
            cover : crop scale x 
            stretch : stretch

    without copywriteAction_site : unsplash

*4: Position Property : 
    - Postition CSS Property sets how an element is positioned in a document
     The top, right, bottom, and left properties determine the final location of positioned
     elements. 
     i : Static : The top, right, bottom, left, and z-index properties have no effect. 
                  This is the default value. 
     ii: relative: The offset is relative to itself based on the values of top, right, bottom, and left. 
     iii: absolute : The element is removed from the normal dicument flow, and no space is created for the 
          element in in the page layout. 
          - It is positioned relative to its closest positioned ancestor, if any: otherwise, It is placed 
          relative to the initial containing block. 
     iv: fixed : The element is removed from the normal document flow, and no space is created for the element 
         in the page layout. 
        - It is positioned relative to the initial containing block establishing by the viewport. 



*/

/* div{
    height: 200px;
    width: 200px;
    background-color: #4dff00ff;
    // transition: 1s; //also --> tranizition-duration 
    transition-delay: 1s; //   
    margin: 0 auto;  // center 
    margin-top: 10px; 
    transition: margin-top 2s ease-in-out 0.2s; 
    transition: margin-top 2s ease 0.2s; 

} */

/* #opacity:hover{
    background-color: #ffa511;
    opacity: 1; 
    opacity: 0.5;  //if we apply on parent element then will also apply on all its children  
    border-radius: 50%; 
} */

/* Transition Shorthand */
/* .div:hover{
    margin-top: 400px; 
} */

/*  CSS Transform : 

section{
    margin-top: 100px; 
}

div {
    width: 200px; 
    height: 50px; 
    background-color: #7aa874;
    border:2px solid black;
    margin: 10px auto;
}

div:nth-of-type(2n){
    background-color: #f7db6a;
}

div:nth-of-type(3n){
    background-color: #ebb02d;
}

 transform : rotate

#one {
    transform: rotate(45deg); //move right side
}

/* transform:  scale 
#two{
    transform: scale(0.5); 
    transform: scale(2, 0.5);  // x(width), y(height)
    

    // for scale X & Y 
    transform: scaleX(1);
    transform: scaleY(2); 

}

#three{
    transform: translate(100px, 100px); 
    transform: translateY(100px);
    transform: translateY(-100px);
}

#four{
    transform:skew(30deg); /<--move-side
    transform:skew(-30deg); \<--move-side
}

/*ud raha hai niche-------> 
 #five{
    transform: rotate(30deg) translateX(150px)
} 


/*  i: Shadow Properties : 
  ii: Background Image:  

div{
   color:blue;
   box-shadow: 2px  2px 8px black; 
   background-image: url(Orange.jpg);
    background-size:contain;
    background-size: cover; // adjust 
    background-size: stretch;
}
*/ 


/* -card Hover Effect:------------------------------------------------------------ */

  
/* .card{
    width:200px;
    height:200px; 
    border: 2px solid black; 
    display: inline-block;
    margin: 10px; 
    border-radius: 5px; 

    box-shadow: 2px 4px 8px black;
    transition: 2s;
}

.desc{
    padding: 0 2px 0 2px; 
}
img{
    width: 100px; 
    background-size: cover;
}

.card:hover{
    box-shadow: 0 8px 16px black;
} */

/* ------------------------------------- */
/* Postion:  */

/* div{
    height: 100px; 
    width: 100px;
    background-color: green;
    text-align: center;
    border:3px solid black;
    margin: 20px; 
    display: inline-block;
} */
/* 1: static : no changes occure */
/* #static {
   background-color: yellow;
    position:static; 
    top: 100px;
    left: 100px;
} */

/* changes occure : from center of block:  */

/* #relative {
    background-color: yellow;
    position:relative; 
    top: 100px;
    left: 100px;
} */

/* absolute : The element is removed from the normal document flow, and no space is created for the 
          element in the page layout.  */
          /* #absolute {
            background-color: yellow;
            position:absolute; 
            top: 100px;
            left: 100px;
        }
          #fixed {
            background-color: yellow;
            position:fixed; 
            top: 100px;
            left: 100px;
        }*/ 

        /* extra read about this :  */
          /* #sticky {
            background-color: yellow;
            position:sticky;
            top: 100px;
            left: 100px;
        } */ 

/* --Smiley Face : ------------------------------------- */

/* .face {
    width: 400px; 
    height: 400px;
    background-color: orange; 
    border-radius: 50%; 

}

.mouth {
    width: 200px;
    height: 75px; 
    background-color: brown;
    border-radius: 0 0 50px 50px;
    position:absolute;
    top: 250px;
    left: 100px;
}

.l_eye, .r_eye{
    width: 50px; 
    height: 50px;
    border-radius: 50%; 
    background-color: black;
    display: inline-block;
    position:absolute;
    left: 100px;
    top: 100px;
}

.r_eye{
    left: 250px;
} */
/* ------------------------------------------------- */
 /* Assignment: css_nextStep_part 4------------------------------- */
/*Qs1. Add a 2 s transition on box1 for width changes. It should have 'eace-in' speed curve & 0.5x delay */

#box1{
    width: 100px; 
    height: 100px;
    background: green;
  }
  
  #box1:hover{
    width: 600px; 
    transition: 2s;
  }
  
  /* Question2 : Using transform, move box2 200px to the right & 200px down. Also rotate it 90deg */
  
  #box2{
    width: 100px; 
    height: 100px;
    background: red; 
    transform: translate(200px,200px) rotate(90deg);
  }
  
  /* Q3: Using transform, skew box3 20deg along the x axix.  */
  
  #box3{
    width: 100px; 
    height: 100px;
    background: lightblue; 
    transform: skewX(30deg ); 
  }
  
  /* Q4: set a 2px horizontal & 2px vertical, green shadow for box4, with a 5px blur radius. */
  
  #box4 {
    width: 100px; 
    height: 100px; 
    background: lightgreen; 
    box-shadow: 4px 4px 100px green;
  }
  
  /*Qs5.Set Your picture or any picture as the background of the div "myPic".Also, set transparency of this div to 50%. */
  #myPic{
    width: 200px; 
    height: 200px;
    background: pink; 
    background-image: url("html_css_Jss.jpg");
    background-size: cover; 
    opacity: 50%
  }
  
  #myPic:hover{
    opacity: 100%;
  }
  